<resources>
    <string name="app_name">NoHttpConnecter</string>
    <string name="txt_confirm">确定</string>
    <string name="txt_cancel">取消</string>
    <string name="req_str">请求 String</string>
    <string name="req_img">请求 Image</string>
    <string name="txt_https_verify">Https证书请求</string>
    <string name="txt_https_no_verify">免Https证书请求</string>

    <!-- title field -->
    <string name="title_method_activity">各种请求协议演示</string>
    <string name="title_cache_activity">五种缓存策略</string>
    <string name="title_cache_http_activity">Http标准协议的缓存</string>
    <string name="title_cache_request_failed_read_cache_activity">请求网络失败返回缓存</string>
    <string name="title_cache_none_request_network_activity">没有缓存才去请求网络</string>
    <string name="title_cache_only_read_cache">仅仅读取缓存</string>
    <string name="title_cache_only_request_network">仅仅请求网络</string>

    <!-- Common -->
    <string name="request_start">发起请求</string>
    <string name="request_original_result">响应码：%1$d\n花费时间：%2$d毫秒。</string>

    <string name="method_request_failed">有的方法为什么请求失败？</string>
    <string name="method_request_failed_reason">在RFC2616中规定了Http1.1支持的请求方法，有些服务器、客户端(Android系统)不支持某些请求方法，所以请求失败是正常的，但是我们还是要遵守协议，推荐服务器和客户端都支持，这是非常好的设计和体验。</string>

    <string name="request_succeed">请求成功</string>
    <string name="request_failed">请求失败</string>

    <!-- CacheStore -->
    <string name="request_from_cache">结果来自缓存</string>
    <string name="request_from_network">结果来自网络</string>
    <string name="request_cache_request_failed_read_cache_tip">具体的可以看看代码，仅仅一句话设置缓存模式就可以了，测试的朋友，可以先成功请求一次，然后断网再请求，就会返回缓存啦！</string>
    <string name="request_cache_only_read_cache_failed">缓存模式是Only_Read_Cache，但是没有找到缓存。</string>

    <!-- Upload and download -->
    <string name="upload_start">开始上传</string>
    <string name="upload_succeed">上传完毕</string>
    <string name="upload_failed">上传失败</string>
    <string name="upload_cancel">上传被取消</string>
    <string name="upload_error">上传发生错误</string>
    <!-- Upload -->
    <string name="upload_request_demo">上传文件示例</string>
    <string name="upload_request_test">附本人用上传方法，详见代码和注释</string>
    <!-- Download -->
    <string name="upload_file_status">文件状态：</string>
    <string name="upload_file_status_wait">等待操作&#8230;</string>

    <string name="download_file_single">单个文件下载</string>
    <string name="download_file_multi">多个文件下载</string>
    <string name="download_file_start">开始下载</string>
    <string name="download_file_delete">删除文件</string>
    <string name="delete_succeed">删除成功</string>
    <!-- Download status -->
    <string name="download_progress">已下载：%1$d&#037;&#037;，速度：%2$skb&#047;s</string>
    <string name="download_status_pause">暂停</string>
    <string name="download_status_be_pause">下载被暂停</string>
    <string name="download_status_re_download">重新下载</string>
    <string name="download_status_again_download">再次尝试</string>
    <string name="download_status_resume">继续下载</string>
    <string name="download_status_finish">下载完成！</string>
    <!-- Download error -->
    <string name="download_error">下载出错了：%1$s</string>
    <string name="download_error_server">服务器数据错误！</string>
    <string name="download_error_network">网络不可用，请检查网络！</string>
    <string name="download_error_storage">存储卡错误，请检查存储卡！</string>
    <string name="download_error_space">存储卡空间不足！</string>
    <string name="download_error_timeout">下载超时！</string>
    <string name="download_error_un_know_host">找不到服务器</string>
    <string name="download_error_url">URL地址错误</string>
    <string name="download_error_un">未知错误</string>
</resources>
